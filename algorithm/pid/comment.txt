
PID算法个人理解:
	pid算法是常用的控制算法,它由p、i和d三种算法组成,在实际控制中,会进行不同的组合来达到不同的控制效果.熟练之后,对于简单系统,可以一眼可以看出大概需要怎么组合、怎么调参.
	(1)p算法的作用是减小测量值(如平衡小车实际角度)和理论值(如平衡小车平衡时期望的0度)之间的误差(差值),让测量值不断接近理论值.
	具体表达式:输出=p参数×误差(误差=测量者-理论值).可以看出,误差越大,p的输出也越大;
	(2)d算法的作用是"阻尼".如果系统误差很大(比如把平衡小车放倒30度)或p参数较大,那么p的输出就会很大,导致系统剧烈响应,出现过冲现象(在平衡小车中表现为大幅度低频震荡),此时就需要用到d算法来抑制,让系统可以刚好停在理论值而不过冲.就好像在水里挥拳,挥的速度越快,受到水的阻力越大,越难继续挥拳.这个"水的阻力"跟d算法的作用很像,因此可以把d算法理解为"阻尼",抑制过冲现象.
	具体表达式:输出=d参数×(此次误差-上一次误差).此次误差与上一次误差的差值反映的是误差的变化速度(比如在平衡小车自平衡的过程中,t0时刻的误差是30度,t1时刻10度,t2时刻5度,那么t0到t1时刻的误差变化速度较大,t1到t2时刻较小).可以看出,两次误差的差值越大,d的输出也越大,抑制效果越明显;
	(3)i算法的作用是消除稳态误差.当系统误差已经接近0时,p的输出会很小,起不到继续减小误差的作用,导致误差始终没办法减小到0.这个时候就需要用到i算法,让误差值不断累加,并将累加后的值输出.i算法常用于精确的控制,比如控制小车的速度和转向角精确维持在某个值.
	具体表达式:输出=i参数×误差的累加.可以看出,只要存在误差(这种误差叫稳态误差),不论误差有多小,i的输出也会像滚雪球一样越滚越大;
	由此可以看出,p即比例(Proportion),i即积分(Integral),d即微分(Differential coefficient) 
from: https://www.bilibili.com/video/BV1zo4y1D7bx